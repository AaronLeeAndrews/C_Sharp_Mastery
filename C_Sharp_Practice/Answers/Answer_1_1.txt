using System;

namespace C_Sharp_Practice.Problems
{
    interface ICreature
    {
        double takeDamage(double attack, double damage);
    }
    interface IMagicUser
    {
        double castDamageSpell();
    }

    class Problem_4_to_7 : ICreature, IMagicUser
    {
        static double defense = 3.0;
        static double magicPower = 7.0;

        double ICreature.takeDamage(double attack, double damage)
        {
            return (attack >= defense && (damage - defense) > 0) ? damage - defense : 0;
        }

        double IMagicUser.castDamageSpell()
        {
            return magicPower;
        }

        public static void Problem_4_to_7_Main()
        {
            ICreature creature = new Problem_4_to_7();
            Console.WriteLine("takeDamage: " + creature.takeDamage(4.0, 1.9));
            Console.WriteLine("takeDamage: " + creature.takeDamage(3.0, 4.0));

            IMagicUser magicUser = new Problem_4_to_7();
            Console.WriteLine("castDamageSpell: " + magicUser.castDamageSpell());
        }
    }
}
