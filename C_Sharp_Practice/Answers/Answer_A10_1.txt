using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;

// 8.0

/*
Use the System.Linq to use the library
There are two main classes, Enumerable, and Queryable
Enumerable is the one that works with the in-memory collections like List, Dictionary, Hash-Map, SortedList, HashSet, and so on.
Queryable is a static class that includes extensions methods for classes that implement the IQueryable interface.
I believe that this means, that a class is a Queryable class if it inherits the IQueryable interface, and therefore must create the required methods as well.



*/
// Using ElementAtOrDefault
//////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Linq;

namespace C_Sharp_Practice
{
    class Practice_Problem
    {
        static List<int> list;

        public static int getItemAt(int idx)
        {
            if (list == null)
                return -1;

            return list.ElementAtOrDefault(idx);
        }

        public static void Practice_Problem_Main()
        {
            int i = getItemAt(7);
            Console.WriteLine(i);

            list = new List<int>()
            {
                1, 2, 3, 4, 5, 6, 7, 8, 9
            };
            i = getItemAt(8);

            Console.WriteLine(i);

            i = getItemAt(-1);

            Console.WriteLine(i);
        }
    }
}
////////////////////////////////////////////////////////////////

// Zip
//////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;

namespace C_Sharp_Practice
{
    class Practice_Problem
    {
        public static void Practice_Problem_Main()
        {
            List<int> list0 = new List<int>() { 0, 1, 2, 3, 4 };
            List<int> list1 = new List<int>() { 5, 6, 7, 8, 9 };

            var list2 = list0.Zip(list1, (first, second) =>  first + second );

            foreach(var li in list2)
            {
                Console.WriteLine(li);
            }
        }
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////

// GroupBy
//////////////////////////////////////////////////////////////////////////////////////////////
        public static void Implement_GroupBy()
        {
            List<int> iL = new List<int>() {1, 2, 1, 12, 3, 3, 3, 4, 1, 2, 3, 1, 4, 12, 12};
            var results = iL.GroupBy(x => x);

            foreach(var r in results)
            {
                Console.WriteLine(r.Key + ": ");
                foreach (int ii in r)
                {
                    Console.Write(ii + ", ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();
        }
//////////////////////////////////////////////////////////////////////////////////////////////