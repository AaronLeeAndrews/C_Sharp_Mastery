using System;
using System.Collections.Generic;

namespace C_Sharp_Practice
{
    class Practice_Problem
    {
        static public T[] getLongestCommonSequence<T>(T[] arrA, T[] arrB)
        {
            T[] arr = new T[0];
            List<T> currList = new List<T>();
            List<T> maxList = new List<T>();

            for (int ii = 0; ii < arrA.Length; ++ii)
            {
                for (int jj = 0; jj < arrB.Length; ++jj)
                {
                    if (arrA[ii].Equals(arrB[jj]))
                    {
                        for (int kk = 0; (ii + kk) < arrA.Length && jj < arrB.Length; ++kk, ++jj)
                        {
                            if (arrA[ii + kk].Equals(arrB[jj]))
                                currList.Add(arrB[jj]);

                            if ((ii + kk) == (arrA.Length - 1) || jj == (arrB.Length - 1) ||
                                !(arrA[ii + kk].Equals(arrB[jj])))
                            {
                                maxList = currList.Count > maxList.Count ? currList : maxList;
                                currList = new List<T>();
                            }
                        }
                    }
                }
            }
            arr = maxList.ToArray();
            return arr;
        }

        static void printArray<T>(T[] tArr)
        {
            for (int ii = 0; ii < tArr.Length; ++ii)
            {
                Console.Write(tArr[ii] + ",");
            }
            Console.WriteLine();
        }

        public static void Practice_Problem_Main()
        {
            int[] A = { 1, 2, 8, 2, 1 }, B = { 8, 2, 1, 4, 7 };
            int[] C = { 1, 2, 3, 2, 1 }, D = { 8, 7, 6, 4, 7 };
            int[] E = { 2, 2, 7, 2, 2 }, F = { 2, 2, 3, 7, 2, 2, 7 };

            char[] G = { 'a', 'b', 'c', 'd', 'e' };
            char[] H = { 'a', 'd', 'e', 'b', 'c', 'd', 'a', 'd', };

            printArray(getLongestCommonSequence(A, B));
            printArray(getLongestCommonSequence(C, D));
            printArray(getLongestCommonSequence(E, F));

            printArray(getLongestCommonSequence(G, H));
        }
    }
}
