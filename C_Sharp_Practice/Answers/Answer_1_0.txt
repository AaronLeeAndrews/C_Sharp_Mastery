using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using System.Collections;
using System.IO;

namespace C_Sharp_Practice
{
    interface IAdd<T>
    {
        public void Add(T t);
    }
    interface IGet<T>
    {
        public T Get(int index);
    }

    class C<T> : IAdd<T>, IGet<T>
    {
        List<T> tList = null;

        public void Add(T t)
        {
            if (tList == null)
                tList = new List<T>();

            tList.Add(t);
        }

        public T Get(int index)
        {
            if (tList == null)
            {
                tList = new List<T>();
                return default;
            }

            if (index < 0 || index >= tList.Count || tList.Count == 0)
                return default;

            return tList[index];
        }
    }
    class Practice_Problem
    {
        public static void Practice_Problem_Main()
        {
            C<int> c0 = new C<int>();
            Console.WriteLine(c0.Get(7));
            c0.Add(0);
            c0.Add(1);
            c0.Add(2);
            Console.WriteLine(c0.Get(1));
            Console.WriteLine(c0.Get(7));
            Console.WriteLine(c0.Get(-1));
        }
    }
}
